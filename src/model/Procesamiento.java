package model;

import java.io.IOException;
import model.sintaxis.SintaxisAbstracta.A_tipo;
import model.sintaxis.SintaxisAbstracta.Acceso;
import model.sintaxis.SintaxisAbstracta.And;
import model.sintaxis.SintaxisAbstracta.Asig;
import model.sintaxis.SintaxisAbstracta.B_tipo;
import model.sintaxis.SintaxisAbstracta.Bloque;
import model.sintaxis.SintaxisAbstracta.Bq_instr;
import model.sintaxis.SintaxisAbstracta.Camp;
import model.sintaxis.SintaxisAbstracta.Cl;
import model.sintaxis.SintaxisAbstracta.Dif;
import model.sintaxis.SintaxisAbstracta.Div;
import model.sintaxis.SintaxisAbstracta.Dl;
import model.sintaxis.SintaxisAbstracta.Entero;
import model.sintaxis.SintaxisAbstracta.Eva;
import model.sintaxis.SintaxisAbstracta.False;
import model.sintaxis.SintaxisAbstracta.Id_tipo;
import model.sintaxis.SintaxisAbstracta.Iden;
import model.sintaxis.SintaxisAbstracta.If_el;
import model.sintaxis.SintaxisAbstracta.If_instr;
import model.sintaxis.SintaxisAbstracta.Ig;
import model.sintaxis.SintaxisAbstracta.In_tipo;
import model.sintaxis.SintaxisAbstracta.Indexacion;
import model.sintaxis.SintaxisAbstracta.Indireccion;
import model.sintaxis.SintaxisAbstracta.L_campos;
import model.sintaxis.SintaxisAbstracta.L_decs;
import model.sintaxis.SintaxisAbstracta.L_exps;
import model.sintaxis.SintaxisAbstracta.L_instrs;
import model.sintaxis.SintaxisAbstracta.L_param;
import model.sintaxis.SintaxisAbstracta.Menos_unario;
import model.sintaxis.SintaxisAbstracta.Mn;
import model.sintaxis.SintaxisAbstracta.Mnig;
import model.sintaxis.SintaxisAbstracta.Mod;
import model.sintaxis.SintaxisAbstracta.Mul;
import model.sintaxis.SintaxisAbstracta.My;
import model.sintaxis.SintaxisAbstracta.Myig;
import model.sintaxis.SintaxisAbstracta.Nl_instr;
import model.sintaxis.SintaxisAbstracta.No_decs;
import model.sintaxis.SintaxisAbstracta.No_exps;
import model.sintaxis.SintaxisAbstracta.No_instrs;
import model.sintaxis.SintaxisAbstracta.No_param;
import model.sintaxis.SintaxisAbstracta.Not;
import model.sintaxis.SintaxisAbstracta.Null_exp;
import model.sintaxis.SintaxisAbstracta.Nw;
import model.sintaxis.SintaxisAbstracta.Or;
import model.sintaxis.SintaxisAbstracta.P_dec;
import model.sintaxis.SintaxisAbstracta.P_tipo;
import model.sintaxis.SintaxisAbstracta.Param_ref;
import model.sintaxis.SintaxisAbstracta.Param_simple;
import model.sintaxis.SintaxisAbstracta.Prog;
import model.sintaxis.SintaxisAbstracta.R_tipo;
import model.sintaxis.SintaxisAbstracta.Rd;
import model.sintaxis.SintaxisAbstracta.Real;
import model.sintaxis.SintaxisAbstracta.Resta;
import model.sintaxis.SintaxisAbstracta.Si_decs;
import model.sintaxis.SintaxisAbstracta.Si_exps;
import model.sintaxis.SintaxisAbstracta.Si_instrs;
import model.sintaxis.SintaxisAbstracta.Si_param;
import model.sintaxis.SintaxisAbstracta.String_exp;
import model.sintaxis.SintaxisAbstracta.String_tipo;
import model.sintaxis.SintaxisAbstracta.Struct_tipo;
import model.sintaxis.SintaxisAbstracta.Suma;
import model.sintaxis.SintaxisAbstracta.T_dec;
import model.sintaxis.SintaxisAbstracta.True;
import model.sintaxis.SintaxisAbstracta.Un_campo;
import model.sintaxis.SintaxisAbstracta.Un_param;
import model.sintaxis.SintaxisAbstracta.Una_dec;
import model.sintaxis.SintaxisAbstracta.Una_exp;
import model.sintaxis.SintaxisAbstracta.Una_instr;
import model.sintaxis.SintaxisAbstracta.V_dec;
import model.sintaxis.SintaxisAbstracta.Wh;
import model.sintaxis.SintaxisAbstracta.Wr;

public interface Procesamiento {
    void procesa(Prog prog) throws IOException;
    void procesa(Bloque bloque) throws IOException;
    void procesa(Si_decs decs) throws IOException;
    void procesa(No_decs decs) throws IOException;
    void procesa(L_decs decs) throws IOException;
    void procesa(Una_dec decs) throws IOException;
    void procesa(T_dec dec) throws IOException;
    void procesa(V_dec dec) throws IOException;
    void procesa(P_dec dec) throws IOException;
    void procesa(A_tipo tipo) throws IOException;
    void procesa(P_tipo tipo) throws IOException;
    void procesa(In_tipo tipo) throws IOException;
    void procesa(R_tipo tipo) throws IOException;
    void procesa(B_tipo tipo) throws IOException;
    void procesa(String_tipo tipo) throws IOException;
    void procesa(Id_tipo tipo) throws IOException;
    void procesa(Struct_tipo tipo) throws IOException;
    void procesa(L_campos campos) throws IOException;
    void procesa(Un_campo campos) throws IOException;
    void procesa(Camp campo) throws IOException;
    void procesa(Si_param lParam) throws IOException;
    void procesa(No_param lParam) throws IOException;
    void procesa(L_param lParam) throws IOException;
    void procesa(Un_param lParam) throws IOException;
    void procesa(Param_simple param) throws IOException;
    void procesa(Param_ref param) throws IOException;
    void procesa(Si_instrs instrs) throws IOException;
    void procesa(No_instrs instrs) throws IOException;
    void procesa(L_instrs instrs) throws IOException;
    void procesa(Una_instr instrs) throws IOException;
    void procesa(Eva instr) throws IOException;
    void procesa(If_instr instr) throws IOException;
    void procesa(If_el instr) throws IOException;
    void procesa(Wh instr) throws IOException;
    void procesa(Rd instr) throws IOException;
    void procesa(Wr instr) throws IOException;
    void procesa(Nw instr) throws IOException;
    void procesa(Dl instr) throws IOException;
    void procesa(Nl_instr instr) throws IOException;
    void procesa(Cl instr) throws IOException;
    void procesa(Bq_instr instr) throws IOException;
    void procesa(Si_exps exps) throws IOException;
    void procesa(No_exps exps) throws IOException;
    void procesa(L_exps exps) throws IOException;
    void procesa(Una_exp exps) throws IOException;
    void procesa(Asig exp) throws IOException;
    void procesa(My exp) throws IOException;
    void procesa(Mn exp) throws IOException;
    void procesa(Myig exp) throws IOException;
    void procesa(Mnig exp) throws IOException;
    void procesa(Ig exp) throws IOException;
    void procesa(Dif exp) throws IOException;
    void procesa(Suma exp) throws IOException;
    void procesa(Resta exp) throws IOException;
    void procesa(And exp) throws IOException;
    void procesa(Or exp) throws IOException;
    void procesa(Mul exp) throws IOException;
    void procesa(Div exp) throws IOException;
    void procesa(Mod exp) throws IOException;
    void procesa(Menos_unario exp) throws IOException;
    void procesa(Not exp) throws IOException;
    void procesa(Indexacion exp) throws IOException;
    void procesa(Acceso exp) throws IOException;
    void procesa(Indireccion exp) throws IOException;
    void procesa(Entero exp) throws IOException;
    void procesa(Real exp) throws IOException;
    void procesa(True exp) throws IOException;
    void procesa(False exp) throws IOException;
    void procesa(String_exp exp) throws IOException;
    void procesa(Iden exp) throws IOException;
    void procesa(Null_exp exp) throws IOException;
}
